app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost

organization:
  name: My Company

backend:
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://localhost
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    #client: better-sqlite3
    #connection: ':memory:'
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}

integrations:
  github:
    - host: github.com
      apps:
        - appId: 1165413
          clientId: Iv23liNNxtpmkmfzqxpn
          clientSecret: 232970b77945ba2d50d3063665388cfe2657e7ee
          webhookSecret: 232970b77945ba2d50d3063665388cfe2657e7ee
          privateKey: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEAzbrnHU8FMzO9196lzvqe2DYou4KiDS5dibH7GRvf1VZnTCgC
            Q/dZnVuf8lw8QVZEcbv3XYar5zPXO9UKcYo2g0sC5ne30ZNZ+eX6G8cPuXFhvo4a
            pRgrrBKlPKTgdd6pe/Fot70x12HOBuUj9ooDqSRqF9XSpdTieztGVyDYPLqGmORQ
            DTgxfpnnUr5RSTPUAqUJBS97Kg3HJJat1slGle2f1ekLNUPbIgAchQJ18Ov/ZwcA
            iesV1mt0p8MGOfBPGBJPCayttfILTO2UckXcCC38emlS+CS3uh6RGZH2LX6XVU4Y
            VDQirZOf7G1piCD2eZ/KxYweEGONSe2On2qjLQIDAQABAoIBAQDMj/SwattDz0YM
            eMGr7f22BRw5XqpdquWtPcDsdY/6ZECwM/QUusVrtyhyZ44udWX3JSzQ3VDewuhY
            APyyavjLUfHfUdkAVaEY37jyl9uly/yh6lDKKh96qMuOYm8iJLWnnSI/2KrPe9vN
            dVhuE0uSirfHXYBoDibo28aUaf85WYFxMeYJrs5/TwXQuq223LImGf5TkyEBbvHS
            HX6NWELoFMxrWffev25X6lCvfSWQb0/+3z/GmSstwR/gm7y1Ncxq8jjRqAMDzzmF
            XmX2gpLkwZGxHmDTmUj1SmflQsd2n0m1HFNenIJ+Q34Qdl1hikkrCMq65RRzZ0sW
            gFb3CE3BAoGBAPYAj1Rm7IQEQoBeXQJCSJ1GS3rFI5HFyMjIF0zpOetwVhyk9jGx
            Lt3XDxYDFkT6aQApcfyRO+OLU0EuRu+rViqU62EnF+cd7VMJ0gyJheGooIPeu5q3
            GkosuFg7Y3Nkwnnu78pt6T+NMyRwZlWawU4wuIjwGopzBUxxz02eBd0dAoGBANYX
            WLbS+JPeHHhs8osPYRCEKfzi0Fd7QFlgVqE03+ScdxSwqIqbAemN/YkJSIa5N0oX
            4CAstaXdqU4hYcsiWcGTBkrSY3p65ETnVZzAC3NYidfnF/E/qVFC0sgB9K5AU624
            Hr9PtslkTvG9c3Yn0rJLFnZ7DcWhXk5uAw4fR9FRAoGAOaIj8kgyvTMqSVzSOYdB
            7+baJCcvkCVgRvnpy5EQisJEym0zaKz0J/EMjcGnY/2uv+T12ZBFEahAlxK6d8gS
            ZeOByb8Y8IKoaT3xwhIuFZImGP8DwNmJBTu47KLtR8mhbmO2NhzN+p+gDbdvojqh
            cyoi8aIe9bTA1woK4UpWYVkCgYAcx6KrYQz9g7w8DBlGzFh2Ce5DCpKLUAxEd4jt
            vtfiOY5gf6cIivHk3auZgl/3jGp8UV1VteztUTDzSdWFoyaBuSv9Xu70hhStlpOR
            sNdZOCu/lFdJnQ8710nSjUDBM/CLx9aKTUL7K7rZEGi3F39hbGqmnsApMxokXPGY
            MmhLIQKBgBnk2cplN/jhy4H12ocfb8Y2sznT911UFIiRQZ1caaUVqNrWHON5BRWg
            t60uLSMS5tXcR607zXzxpLw9au0q8NlUakQXxEkWsEYy9lE7L3HaFHfiq+os2HVn
            8/T+1LegkaVusbDGRYn1tdmVqcZfCpD7xm8ahG+b5OPO+38DCA8p
            -----END RSA PRIVATE KEY-----

proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: development
  providers:
    guest:
      dangerouslyAllowOutsideDevelopment: true 
    github:
      development:
        clientId: Ov23liwBPzcPfLykwya2 
        clientSecret: 7e22154b7ad674f507f55546f9c0b51358794d8b 
        signIn:
          resolvers:
            - resolver: usernameMatchingUserEntityName

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, Template, API, Group, User, Resource, System, Domain, Location]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]
  providers:
    github:
      prefapOrg:
        organization: 'prefapp' 
        catalogPath: '/*.yaml'
        filters:
          branch: "pruebas-backstage" #"fix/add-spec-owner"
          repository: 'catalog'
        schedule: 
          frequency: { minutes: 30 }
          timeout: { minutes: 3 }
    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]
  # Experimental: Always use the search method in UrlReaderProcessor.
  # New adopters are encouraged to enable it as this behavior will be the default in a future release.
  useUrlReadersSearch: true

kubernetes:
  # see https://backstage.io/docs/features/kubernetes/configuration for kubernetes configuration options

# see https://backstage.io/docs/permissions/getting-started for more on the permission framework
permission:
  # setting this to `false` will disable permissions
  enabled: true
